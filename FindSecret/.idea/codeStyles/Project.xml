<component name="ProjectCodeStyleConfiguration">
  <code_scheme name="Project" version="173">
    <Objective-C>
      <option name="KEEP_STRUCTURES_IN_ONE_LINE" value="true" />
      <option name="FUNCTION_BRACE_PLACEMENT" value="5" />
      <option name="METHOD_CALL_ARGUMENTS_ALIGN_BY_COLONS" value="false" />
      <option name="METHOD_CALL_ARGUMENTS_SPECIAL_DICTIONARY_PAIRS_TREATMENT" value="false" />
      <option name="FUNCTION_PARAMETERS_WRAP" value="1" />
      <option name="FUNCTION_CALL_ARGUMENTS_WRAP" value="1" />
      <option name="CLASS_CONSTRUCTOR_INIT_LIST_WRAP" value="1" />
      <option name="CLASS_CONSTRUCTOR_INIT_LIST_NEW_LINE_BEFORE_COLON" value="1" />
      <option name="SPACE_WITHIN_EMPTY_BRACES" value="true" />
      <option name="SPACE_AFTER_INIT_LIST_COLON" value="false" />
      <option name="SPACE_BEFORE_PROTOCOLS_BRACKETS" value="false" />
      <option name="SPACE_BEFORE_POINTER_IN_DECLARATION" value="false" />
      <option name="SPACE_AFTER_POINTER_IN_DECLARATION" value="true" />
      <option name="SPACE_BEFORE_REFERENCE_IN_DECLARATION" value="false" />
      <option name="SPACE_AFTER_REFERENCE_IN_DECLARATION" value="true" />
      <option name="INTRODUCE_CONST_VARS" value="true" />
    </Objective-C>
    <Objective-C-extensions>
      <file>
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="ClassPredef" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Class" />
      </file>
      <class>
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
        <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
      </class>
      <extensions>
        <pair source="mm" header="h" fileNamingConvention="NONE" />
        <pair source="cpp" header="h" fileNamingConvention="NONE" />
        <pair source="c" header="h" fileNamingConvention="NONE" />
      </extensions>
    </Objective-C-extensions>
    <codeStyleSettings language="ObjectiveC">
      <option name="KEEP_BLANK_LINES_IN_DECLARATIONS" value="1" />
      <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
      <option name="INDENT_CASE_FROM_SWITCH" value="false" />
      <option name="SPACE_AROUND_EQUALITY_OPERATORS" value="false" />
      <option name="SPACE_AROUND_RELATIONAL_OPERATORS" value="false" />
      <option name="SPACE_AROUND_ADDITIVE_OPERATORS" value="false" />
      <option name="SPACE_AROUND_MULTIPLICATIVE_OPERATORS" value="false" />
      <option name="SPACE_WITHIN_BRACES" value="true" />
      <option name="BINARY_OPERATION_WRAP" value="1" />
      <option name="BINARY_OPERATION_SIGN_ON_NEXT_LINE" value="true" />
      <option name="KEEP_SIMPLE_BLOCKS_IN_ONE_LINE" value="true" />
      <option name="KEEP_SIMPLE_METHODS_IN_ONE_LINE" value="true" />
      <option name="FOR_STATEMENT_WRAP" value="5" />
    </codeStyleSettings>
  </code_scheme>
</component>